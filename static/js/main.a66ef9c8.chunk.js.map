{"version":3,"sources":["components/CounterButton.js","components/Header.js","components/SearchBox.js","components/ErrorBoundary.js","components/Scroll.js","components/Card.js","components/CardList.js","containers/App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["CounterButton","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateCount","setState","state","count","nextProps","nextState","console","log","react_default","a","createElement","color","props","onClick","Component","Header","className","components_CounterButton","SearchBox","_ref","searchfield","searchChange","type","placeholder","onChange","ErrorBoundary","hasError","error","info","children","Scroll","style","overflowY","borderTop","height","Card","name","email","id","src","concat","alt","CardList","robots","map","user","i","components_Card","key","App","onRequestRobots","_this$props","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialStateSearch","initialStateRobots","rootReducer","createLogger","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a66ef9c8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CounterButton extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n    \r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.state.count !== nextState.count) {\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    updateCount = () => {\r\n        this.setState(state =>  {\r\n            return {count: state.count + 1 }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        console.log('CounterButton')\r\n        return (\r\n            <button color={this.props.color} onClick={this.updateCount}>\r\n                Count: {this.state.count}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterButton;","import React, { Component } from 'react';\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return false;\r\n    }\r\n    \r\n    render() {\r\n        console.log('Header')\r\n        return(\r\n            <div>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <CounterButton color={'red'} />\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction SearchBox({ searchfield, searchChange })\r\n{\r\n    console.log('SearchBox')\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox","import React, { Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. That is not good</h1>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundary","import React from 'react';\r\n\r\nfunction Scroll(props) {\r\n    return (\r\n        <div style={{overflowY: 'scroll', borderTop: '2px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll","import React from 'react';\r\n\r\nfunction Card({ name, email, id })\r\n{\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt='Robot' />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction CardList({ robots })\r\n{\r\n    console.log('CardList')\r\n    return (\r\n        <div>\r\n        {\r\n            robots.map((user, i) => {\r\n                return (\r\n                    <Card \r\n                        key={i}\r\n                        id={robots[i].id}\r\n                        name={robots[i].name}\r\n                        email={robots[i].email}\r\n                    />\r\n                );\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../components/Header';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport Scroll from '../components/Scroll';\r\nimport CardList from '../components/CardList';\r\nimport './App.css';\r\n\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchField: state.searchRobots.searchField,\r\n        robots: state.requestRobots.robots,\r\n        isPending: state.requestRobots.isPending,\r\n        error: state.requestRobots.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n        onRequestRobots: () => dispatch(requestRobots())\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.onRequestRobots();\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { searchField, onSearchChange, robots, isPending } = this.props;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n\r\n        if (isPending)\r\n        {\r\n            return (\r\n                <h1 className='tc f1'>Loading...</h1>\r\n            );\r\n            \r\n        }\r\n        else\r\n        {\r\n            return (\r\n                <div className='tc'>\r\n                    <Header />\r\n                    <SearchBox searchChange={onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n        .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\r\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n    switch(action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, { searchField: action.payload });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateRobots = {\r\n    isPending: false,\r\n    robots: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n    switch(action.type){\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return Object.assign({}, state, { isPending: true });\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return Object.assign({}, state, { robots: action.payload, isPending: false });\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPending: false });\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { searchRobots, requestRobots } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRobots, requestRobots});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}